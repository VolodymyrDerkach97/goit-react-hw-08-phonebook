{"version":3,"file":"static/js/498.66ceca5f.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactsItem/ContactsItem.styled.js","components/ContactsItem/ContactsItem.jsx","components/Contacts/Contacts.jsx","components/ContactsMenu/ContactsMenu.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import styled from '@emotion/styled';\nimport InputMask from 'react-input-mask';\n\nexport const Form = styled.form`\n  border-bottom: 2px solid green;\n`;\n\nexport const InputWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nexport const Input = styled(InputMask)`\n  border: 3px solid #549668;\n  min-width: 200px;\n  border-radius: 20px;\n  padding: 5px;\n\n  :focus {\n    background-color: white;\n  }\n`;\n\nexport const Button = styled.button`\n  /* text-align: center; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  min-width: 100px;\n  height: 40px;\n  padding: 10px;\n  margin: 10px auto;\n  border-radius: 20px;\n  background-color: #78c4c8;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts, selectIsLoading } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nimport { nanoid } from 'nanoid';\n\nimport { Form, InputWraper, Input, Button } from './ContactForm.styled';\nimport { toast } from 'react-toastify';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  const onSubmitContact = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      toast.error(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const nameInputId = nanoid();\n  const telInputId = nanoid();\n\n  return (\n    <Form action=\"\" onSubmit={onSubmitContact}>\n      <InputWraper>\n        <label htmlFor={nameInputId}>Name</label>\n        <Input\n          id={nameInputId}\n          type=\"text\"\n          value={name}\n          onChange={({ target: { value } }) => setName(value)}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </InputWraper>\n      <InputWraper>\n        <label htmlFor={telInputId}>Number</label>\n        <Input\n          mask=\"999-999-9999\"\n          id={telInputId}\n          type=\"tel\"\n          value={number}\n          onChange={({ target: { value } }) => setNumber(value)}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputWraper>\n\n      <Button type=\"submit\" disabled={isLoading}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const DeleteButton = styled.button`\n  min-width: 50px;\n  height: 30px;\n  padding: 5px;\n  margin-left: 10px;\n\n  border-radius: 20px;\n  background-color: #78c4c8;\n`;\n\nexport const Contact = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n  margin: 5px;\n\n  border: 1px solid #61cb80;\n  background-color: #61cb80;\n  border-radius: 10px;\n`;\n\nexport const ContactWrapper = styled.div`\n  text-align: left;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n// import { deleteContact } from '../../redux/';\n\nimport { DeleteButton, Contact, ContactWrapper } from './ContactsItem.styled';\nimport { deleteContact } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\n\nconst ContactsItem = ({ name, id, number }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  return (\n    <Contact>\n      <ContactWrapper>\n        {name}: <br />\n        {number}\n      </ContactWrapper>\n\n      <DeleteButton\n        onClick={() => {\n          dispatch(deleteContact({ name, id }));\n        }}\n        disabled={isLoading}\n      >\n        Delete\n      </DeleteButton>\n    </Contact>\n  );\n};\n\nexport default ContactsItem;\n","import ContactsItem from '../ContactsItem';\nimport PropTypes from 'prop-types';\n\nconst Contacts = ({ contacts }) => {\n  return (\n    <>\n      <ul>\n        {contacts.length !== 0 ? (\n          contacts.map(props => <ContactsItem key={props.id} {...props} />)\n        ) : (\n          <li>No contacts found</li>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Contacts from '../Contacts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\n\nconst ContactsMenu = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filterContacts = () => {\n    const normalaizeContacts = filter.toLowerCase();\n    return [...contacts]\n      .filter(contact =>\n        contact.name.toLowerCase().includes(normalaizeContacts)\n      )\n      .sort((a, b) => a.name.localeCompare(b.name));\n  };\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <p>Total number of contacts: {contacts.length} </p>\n\n      <Contacts contacts={filterContacts()} />\n    </>\n  );\n};\nexport default ContactsMenu;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","Form","styled","InputWraper","Input","InputMask","Button","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","nameInputId","nanoid","telInputId","action","onSubmit","e","preventDefault","find","contact","toast","addContact","htmlFor","id","type","value","onChange","target","pattern","title","required","mask","disabled","DeleteButton","Contact","ContactWrapper","onClick","deleteContact","length","map","props","useEffect","fetchContacts","normalaizeContacts","toLowerCase","includes","sort","a","b","localeCompare","filterContacts"],"sourceRoot":""}